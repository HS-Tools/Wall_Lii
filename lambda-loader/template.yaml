AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Deploys a cron service to fetch Hearthstone leaderboard data every minute.
Resources:
  LeaderboardFetchFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LeaderboardFetchFunction
      CodeUri: dist/
      Handler: handler.handler
      Timeout: 180 #Three minutes. This seems like overkill,.
      AutoPublishAlias: live
      MemorySize: 384
      DeploymentPreference:
        Type: AllAtOnce
      Runtime: python3.9 #Latest. 3.9 is live but not on Lambda.
      Policies:
        - AWSLambdaExecute
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: "*"
              Resource: !GetAtt CompositeKeyTable.Arn
        - Version: "2012-10-17"
          Statement:
            - Effect: Deny
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:*:*:*
      Environment:
        Variables:
          TABLE_NAME: !Ref CompositeKeyTable
      Events:
        ThreeMinuteInvoke:
          Type: Schedule
          Properties:
            Schedule: rate(3 minutes)
  YesterdayMigrationFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: YesterdayMigrationFunction
      CodeUri: dist/
      Handler: yesterday_handler.handler
      Timeout: 180
      AutoPublishAlias: live
      MemorySize: 384
      DeploymentPreference:
        Type: AllAtOnce
      Runtime: python3.8 #Latest. 3.9 is live but not on Lambda.
      Policies:
        - AWSLambdaExecute
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: "*"
              Resource:
                [!GetAtt CompositeKeyTable.Arn, !GetAtt YesterdayTable.Arn]
      Environment:
        Variables:
          TABLE_NAME: !Ref CompositeKeyTable
          YESTERDAY_TABLE_NAME: !Ref YesterdayTable
      Events:
        EndOfDayInvoke:
          Type: Schedule
          Properties:
            Schedule: cron(55 6 * * ? *)
  CompositeKeyTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "PlayerName"
          AttributeType: "S"
        - AttributeName: "Region"
          AttributeType: "S"
      # DynamoDB Free Tier:
      # 25 GB of Storage
      # 25 provisioned Write Capacity Units (WCU)
      # 25 provisioned Read Capacity Units (RCU)
      BillingMode: PROVISIONED
      ProvisionedThroughput: # We should adjust based on usage.
        ReadCapacityUnits: 15
        WriteCapacityUnits: 21
      KeySchema: # Composite Key
        - AttributeName: "PlayerName"
          KeyType: "HASH" # Partition Key
        - AttributeName: "Region"
          KeyType: "RANGE" # Sort Key
      TableName: daily-rating-record-table
      TimeToLiveSpecification:
        AttributeName: TTL #Must be a number
        Enabled: True
  YesterdayTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "PlayerName"
          AttributeType: "S"
        - AttributeName: "Region"
          AttributeType: "S"
      BillingMode: PROVISIONED
      ProvisionedThroughput: # We should adjust based on usage.
        ReadCapacityUnits: 8
        WriteCapacityUnits: 2
      KeySchema: # Composite Key
        - AttributeName: "PlayerName"
          KeyType: "HASH" # Partition Key
        - AttributeName: "Region"
          KeyType: "RANGE" # Sort Key
      TableName: yesterday-rating-record-table
  ChannelTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "ChannelName"
          AttributeType: "S"
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      KeySchema: # Composite Key
        - AttributeName: "ChannelName"
          KeyType: "HASH" # Partition Key
      TableName: channel-table
  AliasTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "Alias"
          AttributeType: "S"
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      KeySchema: # Composite Key
        - AttributeName: "Alias"
          KeyType: "HASH" # Partition Key
      TableName: player-alias-table
